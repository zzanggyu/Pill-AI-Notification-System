# 알약 정보 제공 서버 API 문서

## 목차
1. [시스템 개요](#시스템-개요)
2. [공통 사항](#공통-사항)
3. [법적 고지 API](#법적-고지-api)
4. [알약 검색 API](#알약-검색-api)
5. [알약 분석 API](#알약-분석-api)
6. [복용약 관리 API](#복용약-관리-api)
7. [그룹 관리 API](#그룹-관리-api)
8. [상호작용 API](#상호작용-api)
9. [개인정보 관리 API](#개인정보-관리-api)
10. [데이터베이스 구조](#데이터베이스-구조)

## 시스템 개요

### 기본 정보
- Base URL: `http://localhost:5001/api/v1`
- Content-Type: `application/json`
- 이미지 포맷: Base64 인코딩

### 공통 응답 형식
```json
{
    "success": true/false,
    "message": "응답 메시지",
    "data": {...},  // 선택적
    "error": "에러 메시지"  // 실패 시
}
```

## 공통 사항

### 에러 코드
- 200: 성공
- 400: 잘못된 요청
- 404: 리소스 없음
- 500: 서버 오류

### 응답 헤더
```
Content-Type: application/json
Access-Control-Allow-Origin: *
```

## 법적 고지 API

### 1. 법적 고지 동의
- **엔드포인트**: `/legal-notice`
- **메서드**: POST
- **설명**: 사용자의 법적 고지 동의 정보 저장
- **요청 데이터**:
```json
{
    "userId": "사용자ID",
    "date": "2024-01-01T00:00:00",
    "accepted": true
}
```
- **응답 예시**:
```json
{
    "success": true,
    "message": "Legal notice recorded successfully"
}
```

### 2. 법적 고지 확인
- **엔드포인트**: `/check-legal-notice`
- **메서드**: GET
- **파라미터**: 
  - `userId`: 사용자 ID
- **응답 예시**:
```json
{
    "success": true,
    "message": "User already accepted legal notice"
}
```

## 알약 검색 API

### 1. 이름으로 검색
- **엔드포인트**: `/pills/searchByName`
- **메서드**: GET
- **파라미터**:
  - `itemName`: 검색할 알약 이름
- **응답 데이터 포함 항목**:
  - itemSeq: 의약품 일련번호
  - itemName: 의약품명
  - entpName: 제조사
  - efcyQesitm: 효능
  - useMethodQesitm: 사용법
  - atpnWarnQesitm: 주의사항 경고
  - atpnQesitm: 주의사항
  - intrcQesitm: 상호작용
  - seQesitm: 부작용
  - depositMethodQesitm: 보관법
  - itemImage: 이미지 URL
  - etcotc: 분류

### 2. 증상으로 검색
- **엔드포인트**: `/pills/search`
- **메서드**: GET
- **파라미터**:
  - `symptom`: 검색할 증상
  - `selectedSymptoms`: 선택된 증상 목록 (선택적)

## 알약 분석 API

### 알약 이미지 분석
- **엔드포인트**: `/analyze_pill`
- **메서드**: POST
- **요청 데이터**:
```json
{
    "image": "base64로 인코딩된 이미지 데이터"
}
```
- **응답 데이터 포함 항목**:
  - 기본 약물 정보 (이름으로 검색과 동일)
  - `confidence`: 인식 신뢰도 점수
  - `print_front`: 알약 앞면 텍스트
  - `print_back`: 알약 뒷면 텍스트
  - `color`: 알약 색상
  - `shape`: 알약 모양

## 복용약 관리 API

### 1. 복용약 추가
- **엔드포인트**: `/pills/add`
- **메서드**: POST
- **요청 데이터**:
```json
{
    "user_id": "사용자ID",
    "itemSeq": "의약품일련번호",
    "itemName": "의약품명",
    "efcyQesitm": "효능",
    "atpnQesitm": "주의사항",
    "seQesitm": "부작용",
    "etcotc": "분류",
    "itemImage": "이미지URL",
    "groupName": "그룹명" // 선택적
}
```

### 2. 복용약 목록 조회
- **엔드포인트**: `/pills/user`
- **메서드**: GET
- **파라미터**: 
  - `user_id`: 사용자 ID

### 3. 약물 상태 확인
- **엔드포인트**: `/pills/user-status`
- **메서드**: POST
- **요청 데이터**:
```json
{
    "userId": "사용자ID",
    "itemSeqs": ["의약품일련번호1", "의약품일련번호2"]
}
```
- **응답 예시**:
```json
{
    "success": true,
    "data": {
        "pillStatus": {
            "의약품일련번호1": {
                "isAdded": true,
                "groupName": "아침약",
                "groupId": 1
            }
        },
        "groups": [
            {
                "groupId": 1,
                "groupName": "아침약"
            }
        ]
    }
}
```

## 그룹 관리 API

### 1. 그룹 목록 조회
- **엔드포인트**: `/pills/groups`
- **메서드**: GET
- **파라미터**: 
  - `userId`: 사용자 ID
- **응답 데이터 포함 항목**:
  - groupId: 그룹 ID
  - groupName: 그룹명
  - pillCount: 그룹 내 약물 수
  - lastUpdated: 마지막 업데이트 시간

### 2. 그룹 내 약물 조회
- **엔드포인트**: `/pills/group/<group_id>`
- **메서드**: GET
- **파라미터**:
  - `userId`: 사용자 ID
  - `group_id`: URL 경로에 포함

### 3. 약물 그룹 지정/변경
- **엔드포인트**: `/pills/group`
- **메서드**: POST
- **요청 데이터**:
```json
{
    "userId": "사용자ID",
    "itemSeq": "의약품일련번호",
    "groupName": "그룹명"  // null이면 그룹에서 제거
}
```

## 상호작용 API

### 1. 단일 약물 상호작용 확인
- **엔드포인트**: `/getDrugInteractions`
- **메서드**: GET
- **파라미터**:
  - `drugItemName`: 약물명
  - `userId`: 사용자 ID
- **응답 예시**:
```json
{
    "success": true,
    "data": [
        {
            "noneItemName": "상호작용 약물명",
            "noneIngrName": "성분명",
            "noneItemImage": "이미지URL"
        }
    ]
}
```

### 2. 그룹 내 상호작용 확인
- **엔드포인트**: `/pills/group/<group_id>/interactions`
- **메서드**: GET
- **파라미터**:
  - `userId`: 사용자 ID
- **응답 예시**:
```json
{
    "success": true,
    "data": {
        "group": {
            "groupId": 1,
            "groupName": "아침약"
        },
        "medications": [...],
        "interactions": [
            {
                "drugItemName": "약품A",
                "noneItemName": "약품B",
                "noneIngrName": "성분명",
                "noneItemImage": "이미지URL"
            }
        ],
        "interactionCount": 1
    }
}
```

### 3. 전체 그룹 상호작용 확인
- **엔드포인트**: `/pills/groups/interactions`
- **메서드**: GET
- **파라미터**:
  - `userId`: 사용자 ID
- **응답 예시**:
```json
{
    "success": true,
    "data": {
        "groupCount": 2,
        "groups": [
            {
                "group": {
                    "groupId": 1,
                    "groupName": "아침약"
                },
                "medications": [...],
                "interactions": [...],
                "interactionCount": 2
            }
        ],
        "totalInteractions": 2
    }
}
```

## 개인정보 관리 API

### 1. 개인정보 저장
- **엔드포인트**: `/personal-info/save`
- **메서드**: POST
- **요청 데이터**:
```json
{
    "userId": "사용자ID",
    "age": 30,
    "gender": "M/F",
    "pregnant": false,
    "nursing": false,
    "allergy": "알러지 정보"
}
```

### 2. 개인정보 조회
- **엔드포인트**: `/personal-info`
- **메서드**: GET
- **파라미터**:
  - `userId`: 사용자 ID

### 3. 개인정보 초기화
- **엔드포인트**: `/personal-info/reset`
- **메서드**: POST
- **요청 데이터**:
```json
{
    "userId": "사용자ID"
}
```

## 데이터베이스 구조

### legal_notices 테이블
```sql
CREATE TABLE legal_notices (
    user_id VARCHAR(255) PRIMARY KEY,
    date DATETIME,
    accepted BOOLEAN,
    age INT,
    gender VARCHAR(10),
    pregnant BOOLEAN,
    nursing BOOLEAN,
    allergy TEXT,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
```

### user_pill 테이블
```sql
CREATE TABLE user_pill (
    user_id VARCHAR(255),
    itemSeq VARCHAR(50),
    itemName VARCHAR(255),
    efcyQesitm TEXT,
    atpnQesitm TEXT,
    seQesitm TEXT,
    etcotc VARCHAR(50),
    itemImage TEXT,
    groupName VARCHAR(255),
    groupId INT DEFAULT 0,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UNIQUE KEY unique_user_pill (user_id, itemSeq)
);
```

### 참고 테이블
- `normal_drug`: 기본 약물 정보
- `pill_identification`: 알약 식별 정보
- `none_drug`: 약물 상호작용 정보

## 주의사항
1. 이미지는 반드시 Base64 인코딩하여 전송
2. 모든 요청에 userId 포함 필요
3. 상호작용 검사는 양방향으로 수행됨 (A→B, B→A)
4. 그룹 관련 작업 시 사용자 권한 확인 필수
